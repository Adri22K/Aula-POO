// Source code is decompiled from a .class file using FernFlower decompiler.
package com.biblioteca;

import com.biblioteca.controller.LivroController;
import com.biblioteca.model.entity.Livro;
import com.biblioteca.view.LivroView;
import java.util.List;
import java.util.Scanner;

public class SistemaBiblioteca {
   private LivroController livroController;
   private LivroView livroView;
   private Scanner scanner;
   public int aluguel;

   public SistemaBiblioteca(LivroController livroController, LivroView livroView, Scanner scanner) {
      this.livroController = livroController;
      this.livroView = livroView;
      this.scanner = scanner;
   }

   public void iniciar() {
      int opcao;
      do {
         this.mostrarMenu();
         opcao = this.scanner.nextInt();
         switch (opcao) {
            case 0:
               this.livroView.mostrarMensagem("Saindo do sistema...");
               break;
            case 1:
               this.cadastrarLivro();
               break;
            case 2:
               this.listarLivros();
               break;
            case 3:
               this.atualizarLivro();
               break;
            case 4:
               this.excluirLivro();
               break;
            case 5:
               this.buscarLivro();
               break;
            case 6:
               this.alugarLivro();
               break;
            case 7:
               this.devolverLivro();
               break;
            default:
               this.livroView.mostrarMensagem("Op\u00e7\u00e3o inv\u00e1lida!");
         }
      } while(opcao != 0);

   }

   private void mostrarMenu() {
      this.livroView.mostrarMensagem("=== Menu ===");
      this.livroView.mostrarMensagem("1. Cadastrar Livro");
      this.livroView.mostrarMensagem("2. Listar Livros");
      this.livroView.mostrarMensagem("3. Atualizar Livro");
      this.livroView.mostrarMensagem("4. Excluir Livro");
      this.livroView.mostrarMensagem("5. Buscar livo");
      this.livroView.mostrarMensagem("6. Alugar livro");
      this.livroView.mostrarMensagem("7. Devolver livro");
      this.livroView.mostrarMensagem("0. Sair");
      this.livroView.mostrarMensagem("============");
      this.livroView.mostrarMensagem("Escolha uma op\u00e7\u00e3o:");
   }

   private void cadastrarLivro() {
      this.scanner.nextLine();
      this.livroView.mostrarMensagem("Digite o t\u00edtulo do livro:");
      String titulo = this.scanner.nextLine();
      this.livroView.mostrarMensagem("Digite o autor do livro:");
      String autor = this.scanner.nextLine();
      this.livroView.mostrarMensagem("Digite o n\u00famero de p\u00e1ginas do livro:");
      int numPaginas = this.scanner.nextInt();
      Livro novoLivro = new Livro(titulo, autor, numPaginas);
      String retorno = this.livroController.cadastrarLivro(novoLivro);
      this.livroView.mostrarMensagem(retorno);
   }

   private void listarLivros() {
      this.livroView.mostrarMensagem("=== Livros Cadastrados ===");
      List<Livro> livros = this.livroController.listarLivros();
      this.livroView.mostrarListaLivros(livros);
      this.livroView.mostrarMensagem("===========================");
   }

   private void atualizarLivro() {
      this.livroView.mostrarMensagem("Digite o ID do livro a ser atualizado:");
      int id = this.scanner.nextInt();
      Livro livro = this.livroController.buscarLivro(id);
      if (livro != null) {
         this.scanner.nextLine();
         this.livroView.mostrarMensagem("Digite o novo t\u00edtulo do livro:");
         String titulo = this.scanner.nextLine();
         livro.setTitulo(titulo);
         this.livroView.mostrarMensagem("Digite o novo autor do livro:");
         String autor = this.scanner.nextLine();
         livro.setAutor(autor);
         this.livroView.mostrarMensagem("Digite o novo n\u00famero de p\u00e1ginas do livro:");
         int numPaginas = this.scanner.nextInt();
         livro.setNumPaginas(numPaginas);
         String retorno = this.livroController.atualizarLivro(livro);
         this.livroView.mostrarMensagem(retorno);
      } else {
         this.livroView.mostrarMensagem("Livro n\u00e3o encontrado!");
      }

   }

   private void excluirLivro() {
      this.livroView.mostrarMensagem("Digite o ID do livro a ser exclu\u00eddo:");
      int id = this.scanner.nextInt();
      String retorno = this.livroController.excluirLivro(id);
      this.livroView.mostrarMensagem(retorno);
   }

   private void buscarLivro() {
      this.livroView.mostrarMensagem("Digite o ID do livro a ser buscado:");
      int id = this.scanner.nextInt();
      Livro livro = this.livroController.buscarLivro(id);
      if (livro != null) {
         this.livroView.mostrarDetalhesLivro(livro);
      } else {
         this.livroView.mostrarMensagem("Livro n\u00e3o encontrado!");
      }

   }

   public void alugarLivro() {
      this.livroView.mostrarMensagem("Qual digite o ID do livro que deseja alugar: ");
      int id = this.scanner.nextInt();
      Livro livro = this.livroController.buscarLivro(id);
      if (livro != null) {
         this.livroView.mostrarMensagem("Livro encontrado. Deseja alugar? Digite 0- Sim ou 1- N\u00e3o");
         this.aluguel = this.scanner.nextInt();
         if (this.aluguel == 0) {
            this.livroView.mostrarMensagem("Livro alugado com sucesso.");
         } else {
            this.livroView.mostrarMensagem("Livro n\u00e3o alugado.");
         }
      } else {
         this.livroView.mostrarMensagem("Livro n\u00e3o encontrado!");
      }

   }

   private void devolverLivro() {
      this.livroView.mostrarMensagem("Qual digite o ID do livro que deseja devolver: ");
      int id = this.scanner.nextInt();
      Livro livro = this.livroController.buscarLivro(id);
      if (livro != null) {
         this.livroView.mostrarMensagem("Livrro encontrado.  Deseja devolver? Digite 1- Sim ou 2- N\u00e3o");
         if (this.aluguel == 0) {
            this.livroView.mostrarMensagem("Livro devolvido com sucesso.");
         } else {
            this.livroView.mostrarMensagem("Aluguel renovado com sucesso.");
         }
      } else {
         this.livroView.mostrarMensagem("Livro n\u00e3o foi alugado anteriormente.");
      }

   }
}
